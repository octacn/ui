{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "interactive-gradient-text",
  "type": "registry:component",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/components/interactive-gradient-text.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { motion } from \"motion/react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport const InteractiveGradientText = ({\r\n  text,\r\n  duration,\r\n  className,\r\n}: {\r\n  text: string;\r\n  duration?: number;\r\n  automatic?: boolean;\r\n  className?: string;\r\n}) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n  const [cursor, setCursor] = useState({ x: 0, y: 0 });\r\n  const [hovered, setHovered] = useState(false);\r\n  const [maskPosition, setMaskPosition] = useState({ cx: \"50%\", cy: \"50%\" });\r\n\r\n  useEffect(() => {\r\n    if (svgRef.current && cursor.x !== null && cursor.y !== null) {\r\n      const svgRect = svgRef.current.getBoundingClientRect();\r\n      const cxPercentage = ((cursor.x - svgRect.left) / svgRect.width) * 100;\r\n      const cyPercentage = ((cursor.y - svgRect.top) / svgRect.height) * 100;\r\n      setMaskPosition({\r\n        cx: `${cxPercentage}%`,\r\n        cy: `${cyPercentage}%`,\r\n      });\r\n    }\r\n  }, [cursor]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 -9 300 60\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n      onMouseMove={(e) => setCursor({ x: e.clientX, y: e.clientY })}\r\n      className={cn(\"select-none\", className)}\r\n    >\r\n      <defs>\r\n        <linearGradient id=\"gradientTextFill\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n          <stop offset=\"10%\" stopColor=\"#a3a3a3\" />\r\n          <stop offset=\"90%\" stopColor=\"#000\" />\r\n        </linearGradient>\r\n\r\n        <linearGradient\r\n          id=\"textGradient\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          r=\"25%\"\r\n        >\r\n          {hovered && (\r\n            <>\r\n              <stop offset=\"0%\" stopColor=\"#eab308\" />\r\n              <stop offset=\"25%\" stopColor=\"#ef4444\" />\r\n              <stop offset=\"50%\" stopColor=\"#3b82f6\" />\r\n              <stop offset=\"75%\" stopColor=\"#06b6d4\" />\r\n              <stop offset=\"100%\" stopColor=\"#8b5cf6\" />\r\n            </>\r\n          )}\r\n        </linearGradient>\r\n\r\n        <motion.radialGradient\r\n          id=\"revealMask\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n          r=\"20%\"\r\n          initial={{ cx: \"50%\", cy: \"50%\" }}\r\n          animate={maskPosition}\r\n          transition={{ duration: duration ?? 0, ease: \"easeOut\" }}\r\n        >\r\n          <stop offset=\"0%\" stopColor=\"white\" />\r\n          <stop offset=\"100%\" stopColor=\"black\" />\r\n        </motion.radialGradient>\r\n\r\n        <mask id=\"textMask\">\r\n          <rect\r\n            x=\"0\"\r\n            y=\"0\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            fill=\"url(#revealMask)\"\r\n          />\r\n        </mask>\r\n      </defs>\r\n      <text\r\n        x=\"50%\"\r\n        y=\"50%\"\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"middle\"\r\n        strokeWidth=\"0.3\"\r\n        className=\"stroke-neutral-200 font-[helvetica] text-7xl font-bold dark:stroke-neutral-800\"\r\n        style={{ opacity: hovered ? 0.7 : 0 }}\r\n      >\r\n        {text}\r\n      </text>\r\n      <motion.text\r\n        x=\"50%\"\r\n        y=\"50%\"\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"middle\"\r\n        strokeWidth=\"0.3\"\r\n        fill=\"url(#gradientTextFill)\"\r\n        className=\"dark:stroke-neutral-800 stroke-0 stroke-neutral-200 font-[helvetica] text-7xl font-bold\"\r\n        initial={{ strokeDashoffset: 1000, strokeDasharray: 1000 }}\r\n        animate={{\r\n          strokeDashoffset: 0,\r\n          strokeDasharray: 1000,\r\n        }}\r\n        transition={{\r\n          duration: 4,\r\n          ease: \"easeInOut\",\r\n        }}\r\n      >\r\n        {text}\r\n      </motion.text>\r\n      <text\r\n        x=\"50%\"\r\n        y=\"50%\"\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"middle\"\r\n        strokeWidth=\"0.3\"\r\n        stroke=\"url(#textGradient)\"\r\n        mask=\"url(#textMask)\"\r\n        className=\"font-[helvetica] text-7xl font-bold fill-transparent\"\r\n      >\r\n        {text}\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n",
      "type": "registry:component"
    }
  ]
}