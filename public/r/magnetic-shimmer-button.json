{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "magnetic-shimmer-button",
  "type": "registry:component",
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/components/magnetic-shimmer-button.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { CSSProperties, ComponentPropsWithoutRef, useRef } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface MagneticShimmerButtonProps\r\n  extends ComponentPropsWithoutRef<\"button\"> {\r\n  shimmerColor?: string;\r\n  shimmerSize?: string;\r\n  borderRadius?: string;\r\n  shimmerDuration?: string;\r\n  background?: string;\r\n  strength?: number; // how strongly it pulls toward cursor\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport const MagneticShimmerButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  MagneticShimmerButtonProps\r\n>(\r\n  (\r\n    {\r\n      shimmerColor = \"oklch(75% 0.183 55.934)\",\r\n      shimmerSize = \"0.2em\",\r\n      shimmerDuration = \"4s\",\r\n      borderRadius = \"100px\",\r\n      strength = 5,\r\n      className,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const btnRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n    const handleMouseMove = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      const btn = btnRef.current;\r\n      if (!btn) return;\r\n\r\n      const rect = btn.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - rect.width / 2;\r\n      const y = e.clientY - rect.top - rect.height / 2;\r\n\r\n      btn.style.transform = `translate(${x / strength}px, ${y / strength}px)`;\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      const btn = btnRef.current;\r\n      if (!btn) return;\r\n\r\n      btn.style.transform = \"translate(0,0)\";\r\n    };\r\n\r\n    return (\r\n      <button\r\n        className=\"px-4 py-3 cursor-pointer\"\r\n        ref={(node) => {\r\n          btnRef.current = node;\r\n          if (typeof ref === \"function\") ref(node);\r\n          else if (ref)\r\n            (ref as React.MutableRefObject<HTMLButtonElement | null>).current =\r\n              node;\r\n        }}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseLeave={handleMouseLeave}\r\n        {...props}\r\n      >\r\n        <div\r\n          style={\r\n            {\r\n              \"--spread\": \"90deg\",\r\n              \"--shimmer-color\": shimmerColor,\r\n              \"--radius\": borderRadius,\r\n              \"--speed\": shimmerDuration,\r\n              \"--cut\": shimmerSize,\r\n            } as CSSProperties\r\n          }\r\n          className={cn(\r\n            \"inline-flex items-center justify-center gap-2 whitespace-nowrap transition-all disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none shadow-xs aria-invalid:border-destructive group relative z-0 cursor-pointer overflow-hidden px-6 py-3\",\r\n            \"transform-gpu transition-transform duration-300 ease-in-out active:translate-y-px\",\r\n            \"[border-radius:var(--radius)] bg-foreground\",\r\n            \"text-background font-medium font-inter text-base tracking-wide\",\r\n            className\r\n          )}\r\n        >\r\n          <div\r\n            className={cn(\r\n              \"-z-30 blur-[2px]\",\r\n              \"absolute inset-0 overflow-visible [container-type:size]\"\r\n            )}\r\n          >\r\n            <div className=\"absolute inset-0 h-[100cqh] animate-shimmer-slide [aspect-ratio:1] [border-radius:0] [mask:none]\">\r\n              <div className=\"absolute -inset-full w-auto rotate-0 animate-spin-around [background:conic-gradient(from_calc(270deg-(var(--spread)*0.5)),transparent_0,var(--shimmer-color)_var(--spread),transparent_var(--spread))] [translate:0_0]\" />\r\n            </div>\r\n          </div>\r\n\r\n          <span className=\"relative z-10 flex h-full w-full items-center justify-center\">\r\n            {children}\r\n          </span>\r\n\r\n          <div\r\n            className={cn(\r\n              \"absolute -z-20 [border-radius:var(--radius)] [inset:var(--cut)]\",\r\n              \"bg-foreground\"\r\n            )}\r\n          />\r\n        </div>\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nMagneticShimmerButton.displayName = \"MagneticShimmerButton\";\r\n",
      "type": "registry:component"
    }
  ]
}