/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  accordion: {
    name: "accordion",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/accordion.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/accordion")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  alert: {
    name: "alert",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/alert.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/alert")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "alert-dialog": {
    name: "alert-dialog",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ui/alert-dialog.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/alert-dialog")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "aspect-ratio": {
    name: "aspect-ratio",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/aspect-ratio.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/aspect-ratio")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  avatar: {
    name: "avatar",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/avatar.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/avatar")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  badge: {
    name: "badge",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/badge.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/badge")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  breadcrumb: {
    name: "breadcrumb",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/breadcrumb.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/breadcrumb")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  button: {
    name: "button",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/button.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/button")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  calendar: {
    name: "calendar",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ui/calendar.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/calendar")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  card: {
    name: "card",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/card.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/card")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  carousel: {
    name: "carousel",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ui/carousel.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/carousel")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  checkbox: {
    name: "checkbox",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/checkbox.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/checkbox")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  chart: {
    name: "chart",
    description: "",
    type: "registry:ui",
    registryDependencies: ["card"],
    files: [
      {
        path: "registry/ui/chart.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/chart")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  collapsible: {
    name: "collapsible",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/collapsible.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/collapsible")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  command: {
    name: "command",
    description: "",
    type: "registry:ui",
    registryDependencies: ["dialog"],
    files: [
      {
        path: "registry/ui/command.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/command")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "context-menu": {
    name: "context-menu",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/context-menu.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/context-menu")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  dialog: {
    name: "dialog",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/dialog.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/dialog")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  drawer: {
    name: "drawer",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/drawer.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/drawer")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "dropdown-menu": {
    name: "dropdown-menu",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/dropdown-menu.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/dropdown-menu")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  form: {
    name: "form",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button", "label"],
    files: [
      {
        path: "registry/ui/form.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "hover-card": {
    name: "hover-card",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/hover-card.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/hover-card")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  input: {
    name: "input",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/input.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/input")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-otp": {
    name: "input-otp",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/input-otp.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/input-otp")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  label: {
    name: "label",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/label.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/label")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  menubar: {
    name: "menubar",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/menubar.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/menubar")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "navigation-menu": {
    name: "navigation-menu",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/navigation-menu.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/navigation-menu")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  pagination: {
    name: "pagination",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ui/pagination.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/pagination")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  popover: {
    name: "popover",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/popover.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/popover")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  progress: {
    name: "progress",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/progress.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/progress")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "radio-group": {
    name: "radio-group",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/radio-group.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/radio-group")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  resizable: {
    name: "resizable",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/resizable.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/resizable")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "scroll-area": {
    name: "scroll-area",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/scroll-area.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/scroll-area")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  select: {
    name: "select",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/select.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/select")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  separator: {
    name: "separator",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/separator.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/separator")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  sheet: {
    name: "sheet",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/sheet.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/sheet")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  sidebar: {
    name: "sidebar",
    description: "",
    type: "registry:ui",
    registryDependencies: [
      "button",
      "separator",
      "sheet",
      "tooltip",
      "input",
      "use-mobile",
      "skeleton",
    ],
    files: [
      {
        path: "registry/ui/sidebar.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/sidebar")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  skeleton: {
    name: "skeleton",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/skeleton.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/skeleton")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  slider: {
    name: "slider",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/slider.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/slider")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  sonner: {
    name: "sonner",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/sonner.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/sonner")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  switch: {
    name: "switch",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/switch.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/switch")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  table: {
    name: "table",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/table.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/table")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  tabs: {
    name: "tabs",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/tabs.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/tabs")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  textarea: {
    name: "textarea",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/textarea.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/textarea")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  toggle: {
    name: "toggle",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/toggle.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/toggle")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-group": {
    name: "toggle-group",
    description: "",
    type: "registry:ui",
    registryDependencies: ["toggle"],
    files: [
      {
        path: "registry/ui/toggle-group.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/toggle-group")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  tooltip: {
    name: "tooltip",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ui/tooltip.tsx",
        type: "registry:ui",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/tooltip")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  utils: {
    name: "utils",
    description: "",
    type: "registry:lib",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/lib/utils.ts",
        type: "registry:lib",
        target: "lib/utils.ts",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/lib/utils")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "header-v1": {
    name: "header-v1",
    description: "A responsive header block with navigation.",
    type: "registry:block",
    registryDependencies: ["sheet", "utils", "button"],
    files: [
      {
        path: "registry/blocks/header-v1.tsx",
        type: "registry:block",
        target: "components/header.tsx",
      },
      {
        path: "registry/ui/sheet.tsx",
        type: "registry:component",
        target: "components/ui/sheet.tsx",
      },
      {
        path: "registry/ui/button.tsx",
        type: "registry:component",
        target: "components/ui/button.tsx",
      },
      {
        path: "registry/lib/utils.ts",
        type: "registry:lib",
        target: "lib/utils.ts",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/blocks/header-v1")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["header"],
    meta: undefined,
  },
  "pricing-v1": {
    name: "pricing-v1",
    description: "A Pricing section of three section.",
    type: "registry:block",
    registryDependencies: ["card", "utils", "button"],
    files: [
      {
        path: "registry/blocks/pricing-v1.tsx",
        type: "registry:block",
        target: "components/pricing.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/blocks/pricing-v1")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["pricing"],
    meta: undefined,
  },
  "auth-form-v1": {
    name: "auth-form-v1",
    description: "A Authentication form with sign up and sign in section.",
    type: "registry:block",
    registryDependencies: ["card", "utils", "button", "input", "label"],
    files: [
      {
        path: "registry/blocks/auth-form-v1.tsx",
        type: "registry:block",
        target: "components/auth-form.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/blocks/auth-form-v1")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["authentication"],
    meta: undefined,
  },
  "file-uploader": {
    name: "file-uploader",
    description: "",
    type: "registry:component",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/components/file-uploader.tsx",
        type: "registry:component",
        target: "components/file-uploader.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/components/file-uploader")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "phone-frame": {
    name: "phone-frame",
    description: "",
    type: "registry:component",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/components/phone-frame.tsx",
        type: "registry:component",
        target: "components/phone-frame.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/components/phone-frame")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "paper-background": {
    name: "paper-background",
    description: "",
    type: "registry:component",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/components/paper-background.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/components/paper-background")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "scale-hover-animation-button": {
    name: "scale-hover-animation-button",
    description: "",
    type: "registry:component",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/components/scale-hover-animation-button.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/components/scale-hover-animation-button"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "magnetic-shimmer-button": {
    name: "magnetic-shimmer-button",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/components/magnetic-shimmer-button.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/components/magnetic-shimmer-button")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "interactive-gradient-text": {
    name: "interactive-gradient-text",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/components/interactive-gradient-text.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/components/interactive-gradient-text"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typewriter-effect": {
    name: "typewriter-effect",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/components/typewriter-effect.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/components/typewriter-effect")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "pinterest-layout": {
    name: "pinterest-layout",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/components/pinterest-layout.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/components/pinterest-layout")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "interactive-background": {
    name: "interactive-background",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/components/interactive-background.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/components/interactive-background")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "accordion-demo": {
    name: "accordion-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["accordion"],
    files: [
      {
        path: "registry/demo/ui/accordion-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/accordion-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "alert-demo": {
    name: "alert-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["alert"],
    files: [
      {
        path: "registry/demo/ui/alert-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/alert-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "alert-destructive": {
    name: "alert-destructive",
    description: "",
    type: "registry:example",
    registryDependencies: ["alert"],
    files: [
      {
        path: "registry/demo/ui/alert-destructive.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/alert-destructive")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "alert-dialog-demo": {
    name: "alert-dialog-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["alert-dialog", "button"],
    files: [
      {
        path: "registry/demo/ui/alert-dialog-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/alert-dialog-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "aspect-ratio-demo": {
    name: "aspect-ratio-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["aspect-ratio"],
    files: [
      {
        path: "registry/demo/ui/aspect-ratio-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/aspect-ratio-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "avatar-demo": {
    name: "avatar-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["avatar"],
    files: [
      {
        path: "registry/demo/ui/avatar-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/avatar-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "badge-demo": {
    name: "badge-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["badge"],
    files: [
      {
        path: "registry/demo/ui/badge-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/badge-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "badge-destructive": {
    name: "badge-destructive",
    description: "",
    type: "registry:example",
    registryDependencies: ["badge"],
    files: [
      {
        path: "registry/demo/ui/badge-destructive.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/badge-destructive")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "badge-outline": {
    name: "badge-outline",
    description: "",
    type: "registry:example",
    registryDependencies: ["badge"],
    files: [
      {
        path: "registry/demo/ui/badge-outline.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/badge-outline")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "badge-secondary": {
    name: "badge-secondary",
    description: "",
    type: "registry:example",
    registryDependencies: ["badge"],
    files: [
      {
        path: "registry/demo/ui/badge-secondary.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/badge-secondary")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "breadcrumb-demo": {
    name: "breadcrumb-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["breadcrumb"],
    files: [
      {
        path: "registry/demo/ui/breadcrumb-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/breadcrumb-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "breadcrumb-separator": {
    name: "breadcrumb-separator",
    description: "",
    type: "registry:example",
    registryDependencies: ["breadcrumb"],
    files: [
      {
        path: "registry/demo/ui/breadcrumb-separator.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/breadcrumb-separator")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "breadcrumb-dropdown": {
    name: "breadcrumb-dropdown",
    description: "",
    type: "registry:example",
    registryDependencies: ["breadcrumb"],
    files: [
      {
        path: "registry/demo/ui/breadcrumb-dropdown.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/breadcrumb-dropdown")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "breadcrumb-ellipsis": {
    name: "breadcrumb-ellipsis",
    description: "",
    type: "registry:example",
    registryDependencies: ["breadcrumb"],
    files: [
      {
        path: "registry/demo/ui/breadcrumb-ellipsis.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/breadcrumb-ellipsis")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "breadcrumb-link": {
    name: "breadcrumb-link",
    description: "",
    type: "registry:example",
    registryDependencies: ["breadcrumb"],
    files: [
      {
        path: "registry/demo/ui/breadcrumb-link.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/breadcrumb-link")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "breadcrumb-responsive": {
    name: "breadcrumb-responsive",
    description: "",
    type: "registry:example",
    registryDependencies: ["breadcrumb"],
    files: [
      {
        path: "registry/demo/ui/breadcrumb-responsive.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/breadcrumb-responsive")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-demo": {
    name: "button-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-secondary": {
    name: "button-secondary",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-secondary.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-secondary")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-destructive": {
    name: "button-destructive",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-destructive.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-destructive")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-outline": {
    name: "button-outline",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-outline.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-outline")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-ghost": {
    name: "button-ghost",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-ghost.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-ghost")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-link": {
    name: "button-link",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-link.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-link")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-with-icon": {
    name: "button-with-icon",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-with-icon.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-with-icon")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-loading": {
    name: "button-loading",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-loading.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-loading")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-icon": {
    name: "button-icon",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-icon.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-icon")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button-as-child": {
    name: "button-as-child",
    description: "",
    type: "registry:example",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/ui/button-as-child.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/button-as-child")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "calendar-demo": {
    name: "calendar-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["calendar"],
    files: [
      {
        path: "registry/demo/ui/calendar-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/calendar-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "calendar-form": {
    name: "calendar-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["calendar", "form", "popover"],
    files: [
      {
        path: "registry/demo/ui/calendar-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/calendar-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "calendar-hijri": {
    name: "calendar-hijri",
    description: "A Persian calendar.",
    type: "registry:example",
    registryDependencies: ["calendar"],
    files: [
      {
        path: "registry/demo/ui/calendar-hijri.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/calendar-hijri")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["calendar", "date"],
    meta: {
      iframeHeight: "600px",
      container:
        "w-full bg-surface min-h-svh flex px-4 py-12 items-start md:py-20 justify-center min-w-0",
      mobile: "component",
    },
  },
  "card-demo": {
    name: "card-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["card", "button", "switch"],
    files: [
      {
        path: "registry/demo/ui/card-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/card-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "card-with-form": {
    name: "card-with-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["button", "card", "input", "label", "select"],
    files: [
      {
        path: "registry/demo/ui/card-with-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/card-with-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "carousel-demo": {
    name: "carousel-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["carousel"],
    files: [
      {
        path: "registry/demo/ui/carousel-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/carousel-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "carousel-size": {
    name: "carousel-size",
    description: "",
    type: "registry:example",
    registryDependencies: ["carousel"],
    files: [
      {
        path: "registry/demo/ui/carousel-size.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/carousel-size")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "carousel-spacing": {
    name: "carousel-spacing",
    description: "",
    type: "registry:example",
    registryDependencies: ["carousel"],
    files: [
      {
        path: "registry/demo/ui/carousel-spacing.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/carousel-spacing")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "carousel-orientation": {
    name: "carousel-orientation",
    description: "",
    type: "registry:example",
    registryDependencies: ["carousel"],
    files: [
      {
        path: "registry/demo/ui/carousel-orientation.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/carousel-orientation")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "carousel-api": {
    name: "carousel-api",
    description: "",
    type: "registry:example",
    registryDependencies: ["carousel"],
    files: [
      {
        path: "registry/demo/ui/carousel-api.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/carousel-api")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "carousel-plugin": {
    name: "carousel-plugin",
    description: "",
    type: "registry:example",
    registryDependencies: ["carousel"],
    files: [
      {
        path: "registry/demo/ui/carousel-plugin.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/carousel-plugin")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "chart-bar-demo": {
    name: "chart-bar-demo",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/chart-bar-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/chart-bar-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "chart-bar-interactive": {
    name: "chart-bar-interactive",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/chart-bar-interactive.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/chart-bar-interactive")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "chart-bar-demo-grid": {
    name: "chart-bar-demo-grid",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/chart-bar-demo-grid.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/chart-bar-demo-grid")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "chart-bar-demo-axis": {
    name: "chart-bar-demo-axis",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/chart-bar-demo-axis.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/chart-bar-demo-axis")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "chart-bar-demo-tooltip": {
    name: "chart-bar-demo-tooltip",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/chart-bar-demo-tooltip.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/chart-bar-demo-tooltip")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "chart-bar-demo-legend": {
    name: "chart-bar-demo-legend",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/chart-bar-demo-legend.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/chart-bar-demo-legend")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "chart-tooltip-demo": {
    name: "chart-tooltip-demo",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/chart-tooltip-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/chart-tooltip-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "checkbox-demo": {
    name: "checkbox-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["checkbox"],
    files: [
      {
        path: "registry/demo/ui/checkbox-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/checkbox-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "checkbox-disabled": {
    name: "checkbox-disabled",
    description: "",
    type: "registry:example",
    registryDependencies: ["checkbox"],
    files: [
      {
        path: "registry/demo/ui/checkbox-disabled.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/checkbox-disabled")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "checkbox-form-multiple": {
    name: "checkbox-form-multiple",
    description: "",
    type: "registry:example",
    registryDependencies: ["checkbox", "form"],
    files: [
      {
        path: "registry/demo/ui/checkbox-form-multiple.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/checkbox-form-multiple")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "checkbox-form-single": {
    name: "checkbox-form-single",
    description: "",
    type: "registry:example",
    registryDependencies: ["checkbox", "form"],
    files: [
      {
        path: "registry/demo/ui/checkbox-form-single.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/checkbox-form-single")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "checkbox-with-text": {
    name: "checkbox-with-text",
    description: "",
    type: "registry:example",
    registryDependencies: ["checkbox"],
    files: [
      {
        path: "registry/demo/ui/checkbox-with-text.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/checkbox-with-text")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "collapsible-demo": {
    name: "collapsible-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["collapsible"],
    files: [
      {
        path: "registry/demo/ui/collapsible-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/collapsible-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "combobox-demo": {
    name: "combobox-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["command"],
    files: [
      {
        path: "registry/demo/ui/combobox-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/combobox-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "combobox-dropdown-menu": {
    name: "combobox-dropdown-menu",
    description: "",
    type: "registry:example",
    registryDependencies: ["command", "dropdown-menu", "button"],
    files: [
      {
        path: "registry/demo/ui/combobox-dropdown-menu.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/combobox-dropdown-menu")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "combobox-form": {
    name: "combobox-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["command", "form"],
    files: [
      {
        path: "registry/demo/ui/combobox-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/combobox-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "combobox-popover": {
    name: "combobox-popover",
    description: "",
    type: "registry:example",
    registryDependencies: ["combobox", "popover"],
    files: [
      {
        path: "registry/demo/ui/combobox-popover.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/combobox-popover")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "combobox-responsive": {
    name: "combobox-responsive",
    description: "",
    type: "registry:example",
    registryDependencies: ["combobox", "popover", "drawer"],
    files: [
      {
        path: "registry/demo/ui/combobox-responsive.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/combobox-responsive")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "command-demo": {
    name: "command-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["command"],
    files: [
      {
        path: "registry/demo/ui/command-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/command-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "command-dialog": {
    name: "command-dialog",
    description: "",
    type: "registry:example",
    registryDependencies: ["command", "dialog"],
    files: [
      {
        path: "registry/demo/ui/command-dialog.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/command-dialog")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "context-menu-demo": {
    name: "context-menu-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["context-menu"],
    files: [
      {
        path: "registry/demo/ui/context-menu-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/context-menu-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "data-table-demo": {
    name: "data-table-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["data-table"],
    files: [
      {
        path: "registry/demo/ui/data-table-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/data-table-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "date-picker-demo": {
    name: "date-picker-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["button", "calendar", "popover"],
    files: [
      {
        path: "registry/demo/ui/date-picker-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/date-picker-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "date-picker-form": {
    name: "date-picker-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["button", "calendar", "form", "popover"],
    files: [
      {
        path: "registry/demo/ui/date-picker-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/date-picker-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "date-picker-with-presets": {
    name: "date-picker-with-presets",
    description: "",
    type: "registry:example",
    registryDependencies: ["button", "calendar", "popover", "select"],
    files: [
      {
        path: "registry/demo/ui/date-picker-with-presets.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/date-picker-with-presets")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "date-picker-with-range": {
    name: "date-picker-with-range",
    description: "",
    type: "registry:example",
    registryDependencies: ["button", "calendar", "popover"],
    files: [
      {
        path: "registry/demo/ui/date-picker-with-range.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/date-picker-with-range")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "dialog-demo": {
    name: "dialog-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["dialog"],
    files: [
      {
        path: "registry/demo/ui/dialog-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/dialog-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "dialog-close-button": {
    name: "dialog-close-button",
    description: "",
    type: "registry:example",
    registryDependencies: ["dialog", "button"],
    files: [
      {
        path: "registry/demo/ui/dialog-close-button.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/dialog-close-button")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "drawer-demo": {
    name: "drawer-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["drawer"],
    files: [
      {
        path: "registry/demo/ui/drawer-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/drawer-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "drawer-dialog": {
    name: "drawer-dialog",
    description: "",
    type: "registry:example",
    registryDependencies: ["drawer", "dialog"],
    files: [
      {
        path: "registry/demo/ui/drawer-dialog.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/drawer-dialog")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "dropdown-menu-demo": {
    name: "dropdown-menu-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["dropdown-menu"],
    files: [
      {
        path: "registry/demo/ui/dropdown-menu-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/dropdown-menu-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "dropdown-menu-checkboxes": {
    name: "dropdown-menu-checkboxes",
    description: "",
    type: "registry:example",
    registryDependencies: ["dropdown-menu", "checkbox"],
    files: [
      {
        path: "registry/demo/ui/dropdown-menu-checkboxes.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/dropdown-menu-checkboxes")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "dropdown-menu-radio-group": {
    name: "dropdown-menu-radio-group",
    description: "",
    type: "registry:example",
    registryDependencies: ["dropdown-menu", "radio-group"],
    files: [
      {
        path: "registry/demo/ui/dropdown-menu-radio-group.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/dropdown-menu-radio-group")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "hover-card-demo": {
    name: "hover-card-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["hover-card"],
    files: [
      {
        path: "registry/demo/ui/hover-card-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/hover-card-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-demo": {
    name: "input-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["input"],
    files: [
      {
        path: "registry/demo/ui/input-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-disabled": {
    name: "input-disabled",
    description: "",
    type: "registry:example",
    registryDependencies: ["input"],
    files: [
      {
        path: "registry/demo/ui/input-disabled.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-disabled")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-file": {
    name: "input-file",
    description: "",
    type: "registry:example",
    registryDependencies: ["input"],
    files: [
      {
        path: "registry/demo/ui/input-file.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-file")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-form": {
    name: "input-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["input", "button", "form"],
    files: [
      {
        path: "registry/demo/ui/input-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-with-button": {
    name: "input-with-button",
    description: "",
    type: "registry:example",
    registryDependencies: ["input", "button"],
    files: [
      {
        path: "registry/demo/ui/input-with-button.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-with-button")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-with-label": {
    name: "input-with-label",
    description: "",
    type: "registry:example",
    registryDependencies: ["input", "button", "label"],
    files: [
      {
        path: "registry/demo/ui/input-with-label.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-with-label")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-with-text": {
    name: "input-with-text",
    description: "",
    type: "registry:example",
    registryDependencies: ["input", "button", "label"],
    files: [
      {
        path: "registry/demo/ui/input-with-text.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-with-text")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-otp-demo": {
    name: "input-otp-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["input-otp"],
    files: [
      {
        path: "registry/demo/ui/input-otp-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-otp-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-otp-pattern": {
    name: "input-otp-pattern",
    description: "",
    type: "registry:example",
    registryDependencies: ["input-otp"],
    files: [
      {
        path: "registry/demo/ui/input-otp-pattern.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-otp-pattern")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-otp-separator": {
    name: "input-otp-separator",
    description: "",
    type: "registry:example",
    registryDependencies: ["input-otp"],
    files: [
      {
        path: "registry/demo/ui/input-otp-separator.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-otp-separator")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-otp-controlled": {
    name: "input-otp-controlled",
    description: "",
    type: "registry:example",
    registryDependencies: ["input-otp"],
    files: [
      {
        path: "registry/demo/ui/input-otp-controlled.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-otp-controlled")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input-otp-form": {
    name: "input-otp-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["input-otp", "form"],
    files: [
      {
        path: "registry/demo/ui/input-otp-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/input-otp-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "label-demo": {
    name: "label-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["label"],
    files: [
      {
        path: "registry/demo/ui/label-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/label-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "menubar-demo": {
    name: "menubar-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["menubar"],
    files: [
      {
        path: "registry/demo/ui/menubar-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/menubar-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "mode-toggle": {
    name: "mode-toggle",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/mode-toggle.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/mode-toggle")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "navigation-menu-demo": {
    name: "navigation-menu-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["navigation-menu"],
    files: [
      {
        path: "registry/demo/ui/navigation-menu-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/navigation-menu-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "pagination-demo": {
    name: "pagination-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["pagination"],
    files: [
      {
        path: "registry/demo/ui/pagination-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/pagination-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "popover-demo": {
    name: "popover-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["popover"],
    files: [
      {
        path: "registry/demo/ui/popover-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/popover-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "progress-demo": {
    name: "progress-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["progress"],
    files: [
      {
        path: "registry/demo/ui/progress-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/progress-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "radio-group-demo": {
    name: "radio-group-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["radio-group"],
    files: [
      {
        path: "registry/demo/ui/radio-group-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/radio-group-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "radio-group-form": {
    name: "radio-group-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["radio-group", "form"],
    files: [
      {
        path: "registry/demo/ui/radio-group-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/radio-group-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "resizable-demo": {
    name: "resizable-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["resizable"],
    files: [
      {
        path: "registry/demo/ui/resizable-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/resizable-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "resizable-demo-with-handle": {
    name: "resizable-demo-with-handle",
    description: "",
    type: "registry:example",
    registryDependencies: ["resizable"],
    files: [
      {
        path: "registry/demo/ui/resizable-demo-with-handle.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/resizable-demo-with-handle")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "resizable-vertical": {
    name: "resizable-vertical",
    description: "",
    type: "registry:example",
    registryDependencies: ["resizable"],
    files: [
      {
        path: "registry/demo/ui/resizable-vertical.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/resizable-vertical")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "resizable-handle": {
    name: "resizable-handle",
    description: "",
    type: "registry:example",
    registryDependencies: ["resizable"],
    files: [
      {
        path: "registry/demo/ui/resizable-handle.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/resizable-handle")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "scroll-area-demo": {
    name: "scroll-area-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["scroll-area"],
    files: [
      {
        path: "registry/demo/ui/scroll-area-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/scroll-area-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "scroll-area-horizontal-demo": {
    name: "scroll-area-horizontal-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["scroll-area"],
    files: [
      {
        path: "registry/demo/ui/scroll-area-horizontal-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/scroll-area-horizontal-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "select-demo": {
    name: "select-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["select"],
    files: [
      {
        path: "registry/demo/ui/select-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/select-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "select-scrollable": {
    name: "select-scrollable",
    description: "",
    type: "registry:example",
    registryDependencies: ["select"],
    files: [
      {
        path: "registry/demo/ui/select-scrollable.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/select-scrollable")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "select-form": {
    name: "select-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["select"],
    files: [
      {
        path: "registry/demo/ui/select-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/select-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "separator-demo": {
    name: "separator-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["separator"],
    files: [
      {
        path: "registry/demo/ui/separator-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/separator-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sheet-demo": {
    name: "sheet-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["sheet"],
    files: [
      {
        path: "registry/demo/ui/sheet-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/sheet-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sheet-side": {
    name: "sheet-side",
    description: "",
    type: "registry:example",
    registryDependencies: ["sheet"],
    files: [
      {
        path: "registry/demo/ui/sheet-side.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/sheet-side")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "skeleton-demo": {
    name: "skeleton-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["skeleton"],
    files: [
      {
        path: "registry/demo/ui/skeleton-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/skeleton-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "skeleton-card": {
    name: "skeleton-card",
    description: "",
    type: "registry:example",
    registryDependencies: ["skeleton"],
    files: [
      {
        path: "registry/demo/ui/skeleton-card.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/skeleton-card")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "slider-demo": {
    name: "slider-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["slider"],
    files: [
      {
        path: "registry/demo/ui/slider-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/slider-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sonner-demo": {
    name: "sonner-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["sonner"],
    files: [
      {
        path: "registry/demo/ui/sonner-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/sonner-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "switch-demo": {
    name: "switch-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["switch"],
    files: [
      {
        path: "registry/demo/ui/switch-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/switch-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "switch-form": {
    name: "switch-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["switch", "form"],
    files: [
      {
        path: "registry/demo/ui/switch-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/switch-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "table-demo": {
    name: "table-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["table"],
    files: [
      {
        path: "registry/demo/ui/table-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/table-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "tabs-demo": {
    name: "tabs-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["tabs"],
    files: [
      {
        path: "registry/demo/ui/tabs-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/tabs-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "textarea-demo": {
    name: "textarea-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["textarea"],
    files: [
      {
        path: "registry/demo/ui/textarea-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/textarea-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "textarea-disabled": {
    name: "textarea-disabled",
    description: "",
    type: "registry:example",
    registryDependencies: ["textarea"],
    files: [
      {
        path: "registry/demo/ui/textarea-disabled.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/textarea-disabled")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "textarea-form": {
    name: "textarea-form",
    description: "",
    type: "registry:example",
    registryDependencies: ["textarea", "form"],
    files: [
      {
        path: "registry/demo/ui/textarea-form.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/textarea-form")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "textarea-with-button": {
    name: "textarea-with-button",
    description: "",
    type: "registry:example",
    registryDependencies: ["textarea", "button"],
    files: [
      {
        path: "registry/demo/ui/textarea-with-button.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/textarea-with-button")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "textarea-with-label": {
    name: "textarea-with-label",
    description: "",
    type: "registry:example",
    registryDependencies: ["textarea", "label"],
    files: [
      {
        path: "registry/demo/ui/textarea-with-label.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/textarea-with-label")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "textarea-with-text": {
    name: "textarea-with-text",
    description: "",
    type: "registry:example",
    registryDependencies: ["textarea", "label"],
    files: [
      {
        path: "registry/demo/ui/textarea-with-text.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/textarea-with-text")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-group-demo": {
    name: "toggle-group-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle-group"],
    files: [
      {
        path: "registry/demo/ui/toggle-group-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-group-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-group-disabled": {
    name: "toggle-group-disabled",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle-group"],
    files: [
      {
        path: "registry/demo/ui/toggle-group-disabled.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-group-disabled")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-group-lg": {
    name: "toggle-group-lg",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle-group"],
    files: [
      {
        path: "registry/demo/ui/toggle-group-lg.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-group-lg")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-group-outline": {
    name: "toggle-group-outline",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle-group"],
    files: [
      {
        path: "registry/demo/ui/toggle-group-outline.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-group-outline")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-group-sm": {
    name: "toggle-group-sm",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle-group"],
    files: [
      {
        path: "registry/demo/ui/toggle-group-sm.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-group-sm")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-group-single": {
    name: "toggle-group-single",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle-group"],
    files: [
      {
        path: "registry/demo/ui/toggle-group-single.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-group-single")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-demo": {
    name: "toggle-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle"],
    files: [
      {
        path: "registry/demo/ui/toggle-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-disabled": {
    name: "toggle-disabled",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle"],
    files: [
      {
        path: "registry/demo/ui/toggle-disabled.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-disabled")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-lg": {
    name: "toggle-lg",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle"],
    files: [
      {
        path: "registry/demo/ui/toggle-lg.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-lg")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-outline": {
    name: "toggle-outline",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle"],
    files: [
      {
        path: "registry/demo/ui/toggle-outline.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-outline")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-sm": {
    name: "toggle-sm",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle"],
    files: [
      {
        path: "registry/demo/ui/toggle-sm.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-sm")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-with-text": {
    name: "toggle-with-text",
    description: "",
    type: "registry:example",
    registryDependencies: ["toggle"],
    files: [
      {
        path: "registry/demo/ui/toggle-with-text.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/toggle-with-text")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "tooltip-demo": {
    name: "tooltip-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["tooltip"],
    files: [
      {
        path: "registry/demo/ui/tooltip-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/tooltip-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-blockquote": {
    name: "typography-blockquote",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-blockquote.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-blockquote")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-demo": {
    name: "typography-demo",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-demo.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-h1": {
    name: "typography-h1",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-h1.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-h1")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-h2": {
    name: "typography-h2",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-h2.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-h2")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-h3": {
    name: "typography-h3",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-h3.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-h3")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-h4": {
    name: "typography-h4",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-h4.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-h4")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-h5": {
    name: "typography-h5",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-h5.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-h5")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-h6": {
    name: "typography-h6",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-h6.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-h6")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-inline-code": {
    name: "typography-inline-code",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-inline-code.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-inline-code")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-large": {
    name: "typography-large",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-large.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-large")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-lead": {
    name: "typography-lead",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-lead.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-lead")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-list": {
    name: "typography-list",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-list.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-list")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-muted": {
    name: "typography-muted",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-muted.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-muted")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-p": {
    name: "typography-p",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-p.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-p")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-small": {
    name: "typography-small",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/ui/typography-small.tsx",
        type: "registry:example",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/ui/typography-small")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "pricing-v1-demo": {
    name: "pricing-v1-demo",
    description: "A Pricing Demo of three section.",
    type: "registry:block",
    registryDependencies: ["card", "utils", "button"],
    files: [
      {
        path: "registry/demo/blocks/pricing-v1-demo.tsx",
        type: "registry:block",
        target: "app/page.tsx",
      },
      {
        path: "registry/blocks/pricing-v1.tsx",
        type: "registry:block",
        target: "components/pricing-v1.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/blocks/pricing-v1-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["pricing"],
    meta: undefined,
  },
  "auth-form-v1-demo": {
    name: "auth-form-v1-demo",
    description: "A Authentication form with sign up and sign in section.",
    type: "registry:block",
    registryDependencies: ["card", "utils", "button", "input", "label"],
    files: [
      {
        path: "registry/demo/blocks/auth-form-v1-demo.tsx",
        type: "registry:block",
        target: "app/page.tsx",
      },
      {
        path: "registry/blocks/auth-form-v1.tsx",
        type: "registry:block",
        target: "components/auth-form.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/blocks/auth-form-v1-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["authentication"],
    meta: undefined,
  },
  "sidebar-demo": {
    name: "sidebar-demo",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-header": {
    name: "sidebar-header",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-header.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-header")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-footer": {
    name: "sidebar-footer",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-footer.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-footer")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-group": {
    name: "sidebar-group",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-group.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-group")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-group-collapsible": {
    name: "sidebar-group-collapsible",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-group-collapsible.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/sidebars/sidebar-group-collapsible"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-group-action": {
    name: "sidebar-group-action",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-group-action.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-group-action")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-menu": {
    name: "sidebar-menu",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-menu.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-menu")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-menu-action": {
    name: "sidebar-menu-action",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-menu-action.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-menu-action")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-menu-sub": {
    name: "sidebar-menu-sub",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-menu-sub.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-menu-sub")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-menu-collapsible": {
    name: "sidebar-menu-collapsible",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-menu-collapsible.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/sidebars/sidebar-menu-collapsible"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-menu-badge": {
    name: "sidebar-menu-badge",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-menu-badge.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-menu-badge")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-rsc": {
    name: "sidebar-rsc",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-rsc.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-rsc")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-controlled": {
    name: "sidebar-controlled",
    description: "",
    type: "registry:example",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/sidebars/sidebar-controlled.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-controlled")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sidebar-07": {
    name: "sidebar-07",
    description: "A sidebar that collapses to icons.",
    type: "registry:block",
    registryDependencies: [
      "sidebar",
      "breadcrumb",
      "separator",
      "collapsible",
      "dropdown-menu",
      "avatar",
    ],
    files: [
      {
        path: "registry/demo/sidebars/sidebar-07/page.tsx",
        type: "registry:page",
        target: "app/dashboard/page.tsx",
      },
      {
        path: "registry/demo/sidebars/sidebar-07/components/app-sidebar.tsx",
        type: "registry:component",
        target: "",
      },
      {
        path: "registry/demo/sidebars/sidebar-07/components/nav-main.tsx",
        type: "registry:component",
        target: "",
      },
      {
        path: "registry/demo/sidebars/sidebar-07/components/nav-projects.tsx",
        type: "registry:component",
        target: "",
      },
      {
        path: "registry/demo/sidebars/sidebar-07/components/nav-user.tsx",
        type: "registry:component",
        target: "",
      },
      {
        path: "registry/demo/sidebars/sidebar-07/components/team-switcher.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/sidebars/sidebar-07/page")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["sidebar", "dashboard"],
    meta: undefined,
  },
  "file-uploader-demo": {
    name: "file-uploader-demo",
    description: "",
    type: "registry:component",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/components/file-uploader-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/components/file-uploader-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "phone-frame-demo": {
    name: "phone-frame-demo",
    description: "",
    type: "registry:component",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/components/phone-frame-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/demo/components/phone-frame-demo")
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "paper-background-demo": {
    name: "paper-background-demo",
    description: "",
    type: "registry:component",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/components/paper-background-demo.tsx",
        type: "registry:component",
        target: "components/paper-background.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/components/paper-background-demo"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "scale-hover-animation-button-demo": {
    name: "scale-hover-animation-button-demo",
    description: "",
    type: "registry:component",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/demo/components/scale-hover-animation-button-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/components/scale-hover-animation-button-demo"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "magnetic-shimmer-button-demo": {
    name: "magnetic-shimmer-button-demo",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/demo/components/magnetic-shimmer-button-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/components/magnetic-shimmer-button-demo"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "interactive-gradient-text-demo": {
    name: "interactive-gradient-text-demo",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/demo/components/interactive-gradient-text-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/components/interactive-gradient-text-demo"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typewriter-effect-demo": {
    name: "typewriter-effect-demo",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/demo/components/typewriter-effect-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/components/typewriter-effect-demo"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "pinterest-layout-demo": {
    name: "pinterest-layout-demo",
    description: "",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [
      {
        path: "registry/demo/components/pinterest-layout-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/components/pinterest-layout-demo"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "interactive-background-demo": {
    name: "interactive-background-demo",
    description: "",
    type: "registry:component",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/demo/components/interactive-background-demo.tsx",
        type: "registry:component",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/demo/components/interactive-background-demo"
      )
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object"
        ) || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
}
